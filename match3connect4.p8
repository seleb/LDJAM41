pico-8 cartridge // http://www.pico-8.com
version 15
__lua__
function _init()
board={}
for y=0,7 do
board[y]={}
for x=0,7 do
board[y][x]=0
end
end
--[[board[3][2]=1
board[3][1]=1
board[4][1]=2]]

place={
x=0,
y=0,
turn=1
}
col={
{8,2},
{10,9}
}
light=7
dark=6

parts={}
lpart=1
for i=1,1000 do
parts[i]={
dead=true,
vx=0,
vy=0,
x=0,
y=0,
r=0,
c=7,
t=0
}
end

lerps={}
placel={x=0,y=0}
add(lerps,{place,placel,.2})

anims={}
empty=function()end
end

function _draw()
 --cls()
 for i=0,999 do
 circ(rnd(128),rnd(128),2,0)
 end
 modes[mode].d()
 draw_parts()
end

function _update60()
modes[mode].u()
for i=1,#parts do
local p=parts[i]
if not p.dead then
p.x+=p.vx
p.y+=p.vy
p.vx*=.8
p.vy*=.8
p.t-=1
if p.t <= 0 then
p.dead=true
end
end
end

for k,l in pairs(lerps) do
 l[2].x=lerp(l[2].x,l[1].x,l[3])
 l[2].y=lerp(l[2].y,l[1].y,l[3])
end
end
-->8
--logic helpers
function lerp(from,to,by)
 return from+(to-from)*by
end

function getdropy(x)
 for y=0,7 do
  if board[y][x] > 0 then
   return y
  end
 end
 return 8
end

function curpiece()
return getpiece(place.y,place.x)
end

function getpiece(y,x)
local r=board[y]
if not r then
return 0
end
if not r[x] then
return 0
end
return r[x]
end

function update_pieces()
local stable=true
local blow={}
paths={}
--horizontal
for y=0,7 do
local p={}
for x=0,7 do
 add(p,{x=x,y=y})
end
add(paths,p)
end
--vertical
for x=0,7 do
local p={}
for y=0,7 do
 add(p,{x=x,y=y})
end
add(paths,p)
end
--diag
for y=-7,7 do
local p1={}
local p2={}
local p3={}
local p4={}
for a=0,y do
 add(p1,{y=y-a,x=a})
 add(p2,{y=7-y+a,x=7-a})
 add(p3,{y=y-a,x=7-a})
 add(p4,{y=7-y+a,x=a})
end
add(paths,p1)
add(paths,p2)
add(paths,p3)
add(paths,p4)
end

for k,path in pairs(paths) do
 local last=nil
 local cur=nil
 local seq={}
 for l,point in pairs(path) do
  local x=point.x
  local y=point.y
  cur=getpiece(y,x)
  if last~=nil and cur~=last then
   if last~=0 and #seq >= 3 then
    add(blow,seq)
   end
   seq={}
  end
  add(seq,{y=y,x=x})
  last=cur
 end
 if last~=0 and #seq >= 3 then
  add(blow,seq)
 end
end

for k,seq in pairs(blow) do
for l,spot in pairs(seq) do
 if #seq ~= 4 then
  board[spot.y][spot.x]=0
  stable=false
 end
end
end

while not physics() do end

return stable

end

function physics()
--make pieces fall
stable=true
for x=0,7 do
for y=6,0,-1 do
 local t=y+1
 if getpiece(y,x)>0 and getpiece(t,x)==0 then
  board[t][x]=getpiece(y,x)
  board[y][x]=0
  stable=false
 end
end
end
return stable
end

function next_turn()
 mode="wait"
end

function part()
local p=parts[lpart]
p.dead=false
lpart=(lpart+1)%#parts+1
return p
end

function anim(done,under,above,duration)
add(anims,{
done=done,
t=duration,
d=duration,
under=under,
above=above,
p=0
})
end
-->8
--modes

modes={}
mode = "drop"

modes.wait={
u=function()
if #anims == 0 then	
 if not update_pieces() then
  anim(empty,empty,empty,10)
  return
 end

 place.turn=(place.turn%2)+1
 if curpiece() > 0 then
  mode="pick"
 else
  mode="drop"
 end
 return
end

for k,a in pairs(anims) do
 a.t-=1
 a.p=1-a.t/a.d
 if a.t<=0 then
  a:done()
  del(anims,a)
 end
end

end,
d=function()
 for k,a in pairs(anims) do
  a:under()
 end
 draw_pieces()
 draw_board()
 for k,a in pairs(anims) do
  a:above()
 end
end
}

modes.drop={
u=function()
if move() then
 if board[place.y][place.x] > 0 then
  mode="pick"
 end
 return
end

if press() then
 --drop a piece
 local dropy=getdropy(place.x)-1
 anim(function()
  board[dropy][place.x]=place.turn
 
  for i=0,20 do
  local p=part()
  p.t=15+rnd(15)
  p.x=place.x*16+8
  p.y=dropy*16+8
  p.vx=rnd(4)-2
  p.vy=rnd(4)-2
  p.c=col[place.turn][1]
  p.r=rnd(2)
  end
 end,
 function(self)
  colpal(place.turn)
  spr(3,place.x*16,lerp(-16,dropy*16,self.p^2),2,2)
 end,
 empty,
 dropy*2+10)
 
 mode="wait"
end

end,
d=function()
 draw_pieces()
 
 colpal(place.turn)
 fillp(.6)
 local dropy=getdropy(place.x)
 local x=flr(lerp(placel.x,place.x,1.2)*16+7.5)
 for y=t()%2-2,dropy-.5 do
 rect(x,y*16,x+1,min(dropy*16-8,(y+.4)*16),light)
 end
 spr(16+t()*3%2,place.x*16+4,dropy*16-12)
 fillp()
 
 draw_board()
 draw_selector()
end
}

modes.pick={
u=function()
if move() then
 if board[place.y][place.x] == 0 then
  mode="drop"
 end
 return
end

if press() then
 --select a piece to swap
 modes.swap.piece=curpiece()
 board[place.y][place.x]=0
 mode="swap"
end

end,
d=function()
 draw_pieces()
 draw_board()
 draw_selector()
end
}

modes.swap={
piece=nil,
u=function()
local ox=place.x
local oy=place.y
if move(true) then
 --try to swap pieces
 local t=curpiece()
 if (ox~=place.x or oy~=place.y) and t > 0 then
  --swap
  local a=modes.swap.piece
  local b=board[place.y][place.x]
  board[place.y][place.x]=0
  board[oy][ox]=0
  anim(function()
   board[place.y][place.x]=a
   board[oy][ox]=b
  end,
  function(self)
   colpal(b)
   spr(3,
   lerp(ox,place.x,1-self.p^2)*16,
   lerp(oy,place.y,1-self.p^2)*16,2,2)
   end,
  function(self)
   colpal(a)
   spr(3,
   lerp(ox,place.x,1-(1-self.p)^2)*16,
   lerp(oy,place.y,1-(1-self.p)^2)*16,2,2)
  end,
  20)
  mode="wait"
 else
  --invalid
  place.x=ox
  place.y=oy
 end
 return
end

if press() then
 --cancel swap
 board[oy][ox]=modes.swap.piece
 mode="pick"
end

end,
d=function()
 draw_pieces()
 draw_board()
 
 local y = place.y
 local x = place.x
 colpal(modes.swap.piece)
 spr(3,
 x*16+.5+cos(t()),
 y*16+.5+sin(t()),
 2,2)
 colpal(place.turn)
 local a=t()
 if getpiece(y-1,x) > 0 then
  spr(35+(a+.25)%2,x*16+4,y*16-4+2*sin(a+.00))end
 if getpiece(y+1,x) > 0 then
  spr(35+(a+.75)%2,x*16+4,y*16+13-2*sin(a+.11),1,1,false,true)end
 if getpiece(y,x-1) > 0 then
  spr(33+(a+.5)%2,x*16-4+2*sin(a+.22),y*16+4)end
 if getpiece(y,x+1) > 0 then
  spr(33+(a+1)%2,x*16+13-2*sin(a+.33),y*16+4,1,1,true,false)end
end
}
-->8
--drawing helpers
function colpal(t)
pal(light,col[t][1])
pal(dark,col[t][2])
end

function draw_parts()
for i=1,#parts do
local p=parts[i]
if not p.dead then
circfill(p.x,p.y,p.r,p.c)
end
end
end

function draw_pieces()
 for y=0,7 do
 for x=0,7 do
  local p=board[y][x]
  if p > 0 then
   colpal(p)
   spr(3,x*16,y*16,2,2)
  end
 end
 end
end

function draw_board()
 colpal(place.turn)
 map()
 if mode=="wait" then
  pal()
 end
 for y=1,7 do
 for x=1,7 do
  spr(18,x*16-4,y*16-4)
 end
 end
end

function draw_selector()
 colpal(place.turn)
 local a
 a=(sin(t())+1)*1.5
 fillp(.2)
 rect(placel.x*16+a,placel.y*16+a,(placel.x+1)*16-.001-a,(placel.y+1)*16-.001-a,dark)
 a=(sin(t()+.1)+1)*1.5
 rect(placel.x*16+a,placel.y*16+a,(placel.x+1)*16-.001-a,(placel.y+1)*16-.001-a,light)
 fillp()
end

_fillp=fillp
fillp=function(f)
local d={
0,
0b1000000000000000.1,
0b1000000000100000.1,
0b1000000010100000.1,
0b1010000010100000.1,
0b1010010010100000.1,
0b1010010010100001.1,
0b1010010010100101.1,
0b1010010110100101.1,
0b1010110110100111.1,
0b1010111110101111.1,
0b1110111110101111.1,
0b1110111110111111.1,
0b1110111111111111.1,
0b1111111111111111.1,
0b1111111111111111.1
}
_fillp(d[flr(min(max(0,f),1)*#d)])
end
-->8
--input

function move(nowrap)
if btnp(‚¨ÖÔ∏è) then
place.x-=1
elseif btnp(‚û°Ô∏è) then
place.x+=1
elseif btnp(‚¨ÜÔ∏è) then
place.y-=1
elseif btnp(‚¨áÔ∏è) then
place.y+=1
else
 return false
end

--edges
if nowrap then
 place.x=mid(0,place.x,7)
 place.y=mid(0,place.y,7)
else
 place.x%=8
 place.y%=8
end
return true
end

function press()
return btnp(‚ùé) or btnp(üÖæÔ∏è)
end

--[[

 local p2=part()
 local p=part()
 p.t=15+rnd(15)
 p2.t=p.t
 p.x=place.x*16+8
 p2.x=p.x
 p.y=dropy*16+8
 p2.y=p.y
 p.vx=rnd(4)-2
 p2.vx=p.vx
 p.vy=rnd(4)-2
 p2.vy=p.vy
 p.c=col[place.turn][1]
 p2.c=col[place.turn][2]
 p.r=1
 p2.r=2
 
]]
__gfx__
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001cdcdcdcdcdcdcdcdcdcdcdcdcd100
00000000000000000000000000000666666000000000000000000000000000000000000000000000000000000000000001cdc111111dcdcdcdcdc111111dcd10
0070070000000000000000000006677777766000000000000000000000000000000000000000000000000000000000001cdc10000001dcdcdcdc10000001dcd1
000770000000000000000000006777677677760000000000000000000000000000000000000000000000000000000000cdc1000000001dcdcdc1000000001dcd
000770000000000000000000006767777776760000000000000000000000000000000000000000000000000000000000dc100000000001dcdc100000000001dc
007007000000000000000000067777777777776000000000000000000000000000000000000000000000000000000000c10000000000001dc10000000000001d
000000000000000000000000067677777777676000000000000000000000000000000000000000000000000000000000d10000000000001cd10000000000001c
000000000000000000000000067777777777776000000000000000000000000000000000000000000000000000000000c10000000000001dc10000000000001d
000000000000000000000000067777777777776000000000000000000000000000000000000000000000000000000000d10000000000001cd10000000000001c
000660000007700000000000067677777777676000000000000000000000000000000000000000000000000000000000c10000000000001dc10000000000001d
006776000076670000066000067777777777776000000000000000000000000000000000000000000000000000000000d10000000000001cd10000000000001c
067777600766667000677600006767777776760000000000000000000000000000000000000000000000000000000000cd100000000001cdcd100000000001cd
067777600766667000677600006777677677760000000000000000000000000000000000000000000000000000000000dcd1000000001cdcdcd1000000001cdc
006776000076670000066000000667777776600000000000000000000000000000000000000000000000000000000000cdcd10000001cdcdcdcd10000001cdcd
000660000007700000000000000006666660000000000000000000000000000000000000000000000000000000000000dcdcd111111cdcdcdcdcd111111cdcdc
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd
000000000007700000066000000770000006600000000000000000000000000000000000000000000000000000000000dcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdc
000000000076700000676000007667000067760000000000000000000000000000000000000000000000000000000000cdcdc111111dcdcdcdcdc111111dcdcd
000000000766777006776660076666700677776000000000000000000000000000000000000000000000000000000000dcdc10000001dcdcdcdc10000001dcdc
000000007666666767777776766666676777777600000000000000000000000000000000000000000000000000000000cdc1000000001dcdcdc1000000001dcd
000000007666666767777776777667776667766600000000000000000000000000000000000000000000000000000000dc100000000001dcdc100000000001dc
000000000766777006776660007667000067760000000000000000000000000000000000000000000000000000000000c10000000000001dc10000000000001d
000000000076700000676000007667000067760000000000000000000000000000000000000000000000000000000000d10000000000001cd10000000000001c
000000000007700000066000000770000006600000000000000000000000000000000000000000000000000000000000c10000000000001dc10000000000001d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d10000000000001cd10000000000001c
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c10000000000001dc10000000000001d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d10000000000001cd10000000000001c
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cd100000000001cdcd100000000001cd
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dcd1000000001cdcdcd1000000001cdc
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001dcd10000001cdcdcdcd10000001cdc1
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001dcd111111cdcdcdcdcd111111cdc10
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001dcdcdcdcdcdcdcdcdcdcdcdcdc100
__map__
0c0d0e0d0e0d0e0d0e0d0e0d0e0d0e0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1e1d1e1d1e1d1e1d1e1d1e1d1e1f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c2d2e2d2e2d2e2d2e2d2e2d2e2d2e2f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1e1d1e1d1e1d1e1d1e1d1e1d1e1f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c2d2e2d2e2d2e2d2e2d2e2d2e2d2e2f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1e1d1e1d1e1d1e1d1e1d1e1d1e1f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c2d2e2d2e2d2e2d2e2d2e2d2e2d2e2f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1e1d1e1d1e1d1e1d1e1d1e1d1e1f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c2d2e2d2e2d2e2d2e2d2e2d2e2d2e2f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1e1d1e1d1e1d1e1d1e1d1e1d1e1f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c2d2e2d2e2d2e2d2e2d2e2d2e2d2e2f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1e1d1e1d1e1d1e1d1e1d1e1d1e1f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c2d2e2d2e2d2e2d2e2d2e2d2e2d2e2f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1e1d1e1d1e1d1e1d1e1d1e1d1e1f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c2d2e2d2e2d2e2d2e2d2e2d2e2d2e2f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3c3d3e3d3e3d3e3d3e3d3e3d3e3d3e3f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
